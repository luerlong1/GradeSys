<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xzit.ar.common.mapper.user.UserOriginMapper" >
	<resultMap id="BaseResultMap" type="com.xzit.ar.common.po.user.UserOrigin" >
		<result column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="origin_id" property="originId" jdbcType="INTEGER" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="state" property="state" jdbcType="CHAR" />
		<result column="state_time" property="stateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	
	<!-- select -->
	<select id="getAllOriginMemberIds" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		select user_id from user_origin where origin_id=#{originId} and state='A'
	</select>
	<select id="isMemberInOrigin" parameterType="java.lang.Integer" resultType="java.lang.Integer">
		select count(user_id)
		from user_origin 
		where user_id=#{userId} and origin_id=#{originId}
	</select>

	<select id="queryUserOrigin" parameterType="java.lang.Integer" resultType="map">
		select o.origin_name originName, o.origin_type originType, o.members, o.state, o.state_time stateTime,
		u.true_name trueName, uo.origin_id originId, uo.user_id userId
		from origin o, user_origin uo, user u
		where uo.user_id=#{userId} and uo.origin_id=o.origin_id and u.user_id = uo.user_id
	</select>

	<insert id="save" parameterType="com.xzit.ar.common.po.user.UserOrigin">
		insert into user_origin
		<trim prefix="(" suffix=")" suffixOverrides="," >
			<if test="userId != null" >user_id,</if>
			<if test="originId != null" >origin_id,</if>
			<if test="createTime != null" >create_time,</if>
			<if test="state != null" >state,</if>
			<if test="stateTime != null" >state_time,</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides="," >
			<if test="userId != null" >#{userId,jdbcType=INTEGER},</if>
			<if test="originId != null" >#{originId,jdbcType=INTEGER},</if>
			<if test="createTime != null" >#{createTime,jdbcType=TIMESTAMP},</if>
			<if test="state != null" >#{state,jdbcType=CHAR},</if>
			<if test="stateTime != null" >#{stateTime,jdbcType=TIMESTAMP},</if>
		</trim>
	</insert>

	<update id="update" parameterType="com.xzit.ar.common.po.user.UserOrigin">
		update user_origin
		<set>
			<if test="userId != null">user_id = #{userId,jdbcType=INTEGER},</if>
			<if test="originId != null">origin_id = #{originId,jdbcType=INTEGER},</if>
			<if test="createTime != null">create_time = #{createTime,jdbcType=TIMESTAMP},</if>
			<if test="state != null">state = #{state,jdbcType=CHAR},</if>
			<if test="stateTime != null">state_time = #{stateTime,jdbcType=TIMESTAMP},</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER} AND origin_id = #{originId,jdbcType=INTEGER}
	</update>

    <!--删除用户组织-->
    <delete id="delete" parameterType="java.lang.Integer">
      delete from user_origin
      where origin_id = #{originId,jdbcType=INTEGER} and user_id = #{userId,jdbcType=INTEGER}
    </delete>
</mapper>
